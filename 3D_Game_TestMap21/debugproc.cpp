// =====================================================================================================================================================================
//
// デバッグ表示の処理 [debugproc.cpp]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#include "debugproc.h"			// インクルードファイル
#include "manager.h"
#include "renderer.h"

// =====================================================================================================================================================================
// 静的メンバ変数の初期化
// =====================================================================================================================================================================
LPD3DXFONT		CDebugProc::m_pFont			= NULL;
char			CDebugProc::m_aStr[MAX_STR]	= {};

// =====================================================================================================================================================================
// マクロ定義
// =====================================================================================================================================================================

// =====================================================================================================================================================================
//
// コンストラクタ
//
// =====================================================================================================================================================================
CDebugProc::CDebugProc()
{
}

// =====================================================================================================================================================================
//
// デストラクタ
//
// =====================================================================================================================================================================
CDebugProc::~CDebugProc()
{

}

// =====================================================================================================================================================================
//
// 初期化処理
//
// =====================================================================================================================================================================
void CDebugProc::Init()
{
#ifdef _DEBUG
	
	// デバッグ表示用フォント設定
	D3DXCreateFont(*CManager::GetRenderer()->GetDevice() , 15, 7, 0, 0, FALSE, SHIFTJIS_CHARSET, OUT_DEFAULT_PRECIS, DEFAULT_QUALITY, DEFAULT_PITCH, "ＭＳ ゴシック", &m_pFont);
#endif 
}

// =====================================================================================================================================================================
//
// 終了処理
//
// =====================================================================================================================================================================
void CDebugProc::Uninit(void)
{
#ifdef _DEBUG
	if (m_pFont != NULL)
	{	// デバッグ表示用フォントの開放
		m_pFont->Release();
		m_pFont = NULL;
	}
#endif 
}

// =====================================================================================================================================================================
//
// 描画処理
//
// =====================================================================================================================================================================
void CDebugProc::Print(char	* fmt, ...)
{
#ifdef _DEBUG
	va_list args;			// 引数

	int str = strlen(m_aStr);

	// 可変長引数を１個の変数にまとめる
	va_start(args, fmt);

	// まとめられた変数で処理する
	vsprintf(&m_aStr[str], fmt, args);

	va_end(args);
#endif 
}
// =====================================================================================================================================================================
//
// 描画処理
//
// =====================================================================================================================================================================
void CDebugProc::Draw(void)
{	
#ifdef _DEBUG
	RECT	rect		= { 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT };

	// テキスト描画
	m_pFont->DrawText(NULL, m_aStr, -1, &rect, DT_LEFT, D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f));

	m_aStr[0] = '\0';
#endif 
}