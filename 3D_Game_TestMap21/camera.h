// =====================================================================================================================================================================
//
// カメラ処理 [camera.h]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#ifndef _CAMERA_H_
#define _CAMERA_H_

#define _CRT_SECURE_NO_WARNINGS

// =====================================================================================================================================================================
// インクルードファイル
// =====================================================================================================================================================================
#include "main.h"

// =====================================================================================================================================================================
// 前方宣言
// =====================================================================================================================================================================

// =====================================================================================================================================================================
// カメラクラス
// =====================================================================================================================================================================
class CCamera
{
public:
	// カメラのモード
	enum CAMERA_MODE
	{
		CAMERA_MODE_3D = 0,
		CAMERA_MODE_2D,
		CAMERA_MODE_MAX,
	};

	CCamera();											// コンストラクタ
	~CCamera();											// デストラクタ

	/* メンバ関数 */
	void	Init();									// 初期化
	void	Uninit();								// 終了
	void	Update();								// 更新

	/* メンバ関数 */
	void			SetCamera();									// カメラの設定
	CAMERA_MODE		GetCameraMode()		{ return m_CameraMode; };	// カメラのモードの取得
	D3DXVECTOR3		GetRot()			{ return m_rot; };			// カメラの回転情報の取得
	void			SetCameraPosInit();								// カメラの初期座標設定
	void			SetDeadPlayerCameraPos(D3DXVECTOR3 pos);			// プレイヤーが死んだときのカメラの位置

private:
	/* メンバ関数 */
	void				SwitchingCameraMode();			// カメラモードの切り替え

	/* メンバ変数 */
	LPDIRECT3DVERTEXBUFFER9		m_pVtxBuffCamera = NULL;	// 頂点バッファへのポインタ
	D3DXVECTOR3					m_posV;						// 視点
	D3DXVECTOR3					m_posR;						// 注視点( 参照点 )
	D3DXVECTOR3					m_posVDest;					// 目的の視点
	D3DXVECTOR3					m_posRDest;					// 目的の注視点( 参照点 )
	D3DXVECTOR3					m_vecU;						// 上方向ベクトル
	D3DXVECTOR3					m_rot;						// 回転情報
	D3DXVECTOR3					m_rotDest;					// 目的の回転情報
	D3DXMATRIX					m_mtxProjection;			// プロジェクションマトリックス
	D3DXMATRIX					m_mtxView;					// ビューマトリックス
	float						m_fDistance;				// 距離
	float						m_RightStick_X;				// 右スティックのXの値
	float						m_RightStick_Y;				// 右スティックのYの値

	D3DXVECTOR3					m_posVOld;					// 過去の視点
	bool						m_bSwitchingCameraMode;		// カメラモードの切り替えフラグ

	/* 静的メンバ変数 */
	static	CAMERA_MODE			m_CameraMode;				// カメラのモード
};
#endif