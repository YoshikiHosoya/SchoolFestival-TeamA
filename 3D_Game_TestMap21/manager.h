// =====================================================================================================================================================================
//
// マネージャーの処理 [manager.h]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#ifndef _MANAGER_H_
#define _MANAGER_H_

// =====================================================================================================================================================================
// インクルードファイル
// =====================================================================================================================================================================
#include "main.h"

// =====================================================================================================================================================================
// 前方宣言	( ポインタだけなら使える )
// =====================================================================================================================================================================
class CKeyboard;						// キーボードクラス
class CXinputGpad;						// ジョイパッドクラス
class CGame;							// ゲームクラス
class CTitle;							// タイトルクラス
class CResult;							// リザルトクラス
class CRanking;							// ランキングクラス
class CSound;							// サウンドクラス

// =====================================================================================================================================================================
// 管理クラス
// =====================================================================================================================================================================
class CManager
{
public:
	// 画面種類
	enum MODE
	{
		NONE = -1,
		TITLE,					// タイトル
		GAME,					// ゲーム
		RESULT,					// リザルト
		RANKING,				// ランキング
		MAX
	};

	CManager();													// コンストラクタ
	~CManager();												// デストラクタ

	/* メンバ関数 */
	HRESULT Init(HINSTANCE hInstance, HWND hWnd, bool bWindow);	// 初期化
	void	Uninit();											// 終了
	void	Update();											// 更新
	void	Draw();												// 描画

	/* 静的メンバ関数 */
	static	void		SetMode(MODE mode);						// モードの設定
	static	MODE		GetMode()	{ return m_mode; };			// モードの取得
	static	CRenderer	*GetRenderer();						// レンダラーの取得
	static	CKeyboard	*GetKeyboard();						// 入力の取得
	static	CXinputGpad	*GetXinputGpad();					// ゲームパッドの取得
	static	CGame		*GetGame();							// ゲームの取得
	static	CSound		*GetSound();						// サウンドの取得

private:
	/* 静的メンバ変数 */
	static	MODE		m_mode;									// 現在のモード
	static	CRenderer	*m_pRenderer;							// レンダラーのポインタ
	static	CKeyboard	*m_pKeyboard;							// 入力のポインタ
	static	CXinputGpad	*m_pXinputGpad;							// ゲームパッドのポインタ
	static	CGame		*m_pGame;								// ゲームクラスのポインタ
	static	CTitle		*m_pTitle;								// タイトルクラスのポインタ
	static	CResult		*m_pResult;								// ゲームクラスのポインタ
	static	CRanking	*m_pRanking;							// ランキングクラスのポインタ
	static	CSound		*m_pSound;								// サウンドクラスのポインタ
};
#endif
