// =====================================================================================================================================================================
//
// レンダリングの処理 [renderer.h]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#ifndef _RENDERER_H_
#define _RENDERER_H_

// =====================================================================================================================================================================
// インクルードファイル
// =====================================================================================================================================================================
#include "main.h"

// =====================================================================================================================================================================
// 構造体定義
// =====================================================================================================================================================================
typedef struct
{
	D3DXVECTOR3 pos;	// 頂点座標
	float		rhw;	// 1.0で固定、同次座標
	D3DCOLOR	col;	// 頂点カラー
	D3DXVECTOR2 tex;	// テクスチャ座標
} VERTEX_2D;

// 3Dポリゴン頂点フォーマットに合わせた構造体を定義
typedef struct
{
	D3DXVECTOR3		pos;	// 頂点座標
	D3DXVECTOR3		nor;	// 法線ベクトル
	D3DCOLOR		col;	// 頂点カラー
	D3DXVECTOR2		tex;	// テクスチャ座標
} VERTEX_3D;

// =====================================================================================================================================================================
// 前方宣言
// =====================================================================================================================================================================
class CCamera;				// カメラクラス
class CLight;				// ライトクラス
class CDebugProc;			// デバッグ表示クラス
class CFade;				// フェードクラス

// =====================================================================================================================================================================
// レンダリングクラス
// =====================================================================================================================================================================
class CRenderer
{
public:
	CRenderer();													// コンストラクタ
	~CRenderer();													// デストラクタ

	/* メンバ関数 */
	HRESULT Init(HINSTANCE hInstance, HWND hWnd, bool bWindow);		// 初期化
	void	Uninit();												// 終了
	void	Update();												// 更新
	void	Draw();													// 描画

	/* 静的メンバ関数 */
	static	CCamera		*GetCamera()	{ return m_pCamera; };		// カメラの取得

	/* メンバ関数 */
	LPDIRECT3DDEVICE9	*GetDevice()	{ return &m_pD3DDevice; };	// デバイス取得

private:
	/* メンバ関数 */
	void					ResetDevice();				// デバイスのリセット
	/* メンバ変数 */
	LPDIRECT3D9				m_pD3D = NULL;				// Direct3Dのオブジェクトポインタ
	LPDIRECT3DDEVICE9		m_pD3DDevice = NULL;		// Direct3Dデバイスへのポインタ
	D3DPRESENT_PARAMETERS	m_d3dpp;					// プレゼンテーションパラメーター
	LPDIRECT3DTEXTURE9		m_pTexturePolygon = NULL;	// テクスチャへのポインタ
	LPDIRECT3DVERTEXBUFFER9	m_pVtxBuffPolygon = NULL;	// 頂点バッファへのポインタ
	CFade					*m_pFade;					// レンダラーのポインタ
	CDebugProc				*m_pDebugroc;				// デバッグ表示のポインタ
	/* 静的メンバ変数 */
	static	CCamera			*m_pCamera;					// カメラのポインタ
	static	CLight			*m_pLight;					// ライトのポインタ

#ifdef _DEBUG
	/* メンバ変数 */
	LPD3DXFONT				m_pFont = NULL;				// フォントへのポインタ
	int						m_nCountFPS = 0;			// FPSカウンタ
#endif
};
#endif