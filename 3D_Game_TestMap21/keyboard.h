// =====================================================================================================================================================================
//
// キーボード処理 [keyboard.h]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#ifndef _KEYBOARD_H_
#define _KEYBOARD_H_

#define _CRT_SECURE_NO_WARNINGS

// =====================================================================================================================================================================
// インクルードファイル
// =====================================================================================================================================================================
#include "main.h"
#include "input.h"

// =====================================================================================================================================================================
// マクロ定義
// =====================================================================================================================================================================
#define	NUM_KEY_MAX			(256)	// キーの最大数

// =====================================================================================================================================================================
// キーボードクラス
// =====================================================================================================================================================================
class CKeyboard : public CInput
{
public:
	CKeyboard();												// コンストラクタ
	virtual ~CKeyboard();										// デストラクタ

	/* メンバ関数 */
	virtual HRESULT Init(HINSTANCE hInstance, HWND hWnd);		// 初期化
	void			Uninit();									// 終了
	void			Update();									// 更新

	bool			GetKeyboardTrigger(int nKey);				// トリガー
	bool			GetKeyboardPress(int nKey);					// プレス

protected:
	/* メンバ変数 */
	LPDIRECTINPUTDEVICE8	m_pDevKeyboard = NULL;				// 入力デバイス(キーボード)へのポインタ
	BYTE					m_aKeyState[NUM_KEY_MAX];			// キーボードの入力情報ワーク
	BYTE					m_aKeyStateTrigger[NUM_KEY_MAX];	// キーボードの入力情報ワーク
};
#endif