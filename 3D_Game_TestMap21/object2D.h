// =====================================================================================================================================================================
//
// 2Dオブジェクトの処理 [object2D.h]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#ifndef _OBJECT2D_H_
#define _OBJECT2D_H_

// =====================================================================================================================================================================
// インクルードファイル
// =====================================================================================================================================================================
#include "main.h"
#include "scene3D.h"

// =====================================================================================================================================================================
// 2Dオブジェクトクラス
// =====================================================================================================================================================================
class CObject2D : public CScene3D
{
public:

	// 2Dオブジェクトの種類
	enum OBJECT_2D_TYPE
	{
		OBJECT_2D_TYPE_NONE = -1,
		OBJECT_2D_TYPE_FLOOR,					// 床
		OBJECT_2D_TYPE_WALL,					// 左
		OBJECT_2D_TYPE_MAX,
	};

	CObject2D();								// コンストラクタ
	~CObject2D();								// デストラクタ

	/* メンバ関数 */
	void				Init();					// 初期化
	void				Uninit();				// 終了
	void				Update();				// 更新
	void				Draw();					// 描画

	/* 静的メンバ関数 */
	static	CObject2D	*Create(D3DXVECTOR3 pos, OBJECT_2D_TYPE type);	// 2Dオブジェクトの生成
	static	HRESULT		Load();					// ロード
	static	void		Unload();				// アンロード

	/* メンバ関数 */
	bool				CollisionObject2D(D3DXVECTOR3 *pPos, D3DXVECTOR3 *pPosOld, D3DXVECTOR3 *pMove, D3DXVECTOR3 *pSize, CObject2D **ppObjectRet);	// 2Dオブジェクトの当たり判定
	OBJECT_2D_TYPE		GetObject2DType()	{ return m_type; };		// 2Dオブジェクトの種類の取得
	void				SetObject2DType(OBJECT_2D_TYPE type);		// 2Dオブジェクトの種類の設定

private:
	/* メンバ関数 */
	/* 静的メンバ変数 */
	static	LPDIRECT3DTEXTURE9	m_apTexture[OBJECT_2D_TYPE::OBJECT_2D_TYPE_MAX];		// 共有テクスチャのポインタ
	/* メンバ変数 */
	D3DXVECTOR3					m_size;											// サイズ
	D3DXCOLOR					m_col;											// 色
	OBJECT_2D_TYPE				m_type;											// 種類
};
#endif
