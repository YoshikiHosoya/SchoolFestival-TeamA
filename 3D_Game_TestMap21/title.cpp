// =====================================================================================================================================================================
//
// タイトルの処理 [title.cpp]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#include "title.h"			// インクルードファイル
#include "titleUI.h"
#include "keyboard.h"
#include "fade.h"
#include "renderer.h"
#include "sound.h"
#include "ranking.h"
#include "scene.h"
#include "xinputGpad.h"
#include "map.h"
#include "objectmodel.h"
#include "camera.h"
#include "effect.h"
#include "wall.h"

// =====================================================================================================================================================================
// 静的メンバ変数の初期化
// =====================================================================================================================================================================
int					CTitle::m_nNum = 0;

// =====================================================================================================================================================================
// マクロ定義
// =====================================================================================================================================================================
#define MAX_NUM		(1)

// =====================================================================================================================================================================
//
// コンストラクタ
//
// =====================================================================================================================================================================
CTitle::CTitle()
{
}

// =====================================================================================================================================================================
//
// デストラクタ
//
// =====================================================================================================================================================================
CTitle::~CTitle()
{

}

// =====================================================================================================================================================================
//
// 初期化処理
//
// =====================================================================================================================================================================
HRESULT CTitle::Init()
{
	// カメラの初期座標設定
	CManager::GetRenderer()->GetCamera()->SetCameraPosInit();

	// タイトルUIの画像のロード
	CTitleUI::Load();
	// エフェクトの画像読み込み
	CEffect::Load();
	// オブジェクトの読み込み
	CObjectModel::Load();
	// ウォールの画像読み込み
	CWall::Load();

	// タイトルUIの生成
	CTitleUI::Create();
	// 壁の生成
	CWall::Create(CWall::WALLTYPE::WALL_LEFT);
	CWall::Create(CWall::WALLTYPE::WALL_RIGHT);

	// マップの読み込み
	CMap::ObjectLoad();

	// 初期化
	return S_OK;
}

// =====================================================================================================================================================================
//
// 終了処理
//
// =====================================================================================================================================================================
void CTitle::Uninit(void)
{
	// ウォールの画像の破棄
	CWall::Unload();
	// オブジェクトの破棄
	CObjectModel::Unload();
	// エフェクトの画像の破棄
	CEffect::Unload();
	// タイトルUIの画像の破棄
	CTitleUI::Unload();

	// 全ての開放
	CScene::ReleaseAll();

	// マップの開放
	CMap::ReleaseMap();
}

// =====================================================================================================================================================================
//
// 更新処理
//
// =====================================================================================================================================================================
void CTitle::Update(void)
{
	// 変数
	CKeyboard	*pKeyboard = CManager::GetKeyboard();
	CXinputGpad	*pXinputGpad = CManager::GetXinputGpad();
	
	// フェードしていないとき
	if (CFade::GetFadeState() == CFade::FADE_NONE)
	{
		// ゲームへ遷移
		if (pKeyboard->GetKeyboardTrigger(DIK_RETURN) || pXinputGpad->GetTriggerXinputGpad(CXinputGpad::XINPUT_A) || pXinputGpad->GetTriggerXinputGpad(CXinputGpad::XINPUT_START))
		{
			// サウンド
			CManager::GetSound()->PlaySound(CSound::SOUND_LABEL_SE_ENTER);
			
			// ゲームへ
			CFade::SetFade(CManager::GAME);
		}
	}

	// アイコンの移動
	IconMove(pKeyboard);
}

// =====================================================================================================================================================================
//
// 描画処理
//
// =====================================================================================================================================================================
void CTitle::Draw(void)
{	
}

// =====================================================================================================================================================================
//
// タイトルの生成
//
// =====================================================================================================================================================================
CTitle * CTitle::Create()
{
	// 変数
	CTitle *pTitle;

	// メモリの確保
	pTitle = new CTitle;

	// 初期化
	pTitle->Init();

	return pTitle;
}

// =====================================================================================================================================================================
//
// アイコンの移動移動
//
// =====================================================================================================================================================================
void CTitle::IconMove(CKeyboard *pKeyboard)
{
	// === アイコン移動 ===
	if (pKeyboard->GetKeyboardTrigger(DIK_UP))
	{
		// デクリメント
		m_nNum--;

		// 最後に戻す
		if (m_nNum < 0)
		{
			m_nNum = MAX_NUM;
		}
	}
	if (pKeyboard->GetKeyboardTrigger(DIK_DOWN))
	{
		// インクリメント
		m_nNum++;

		// 最初に戻す
		if (m_nNum > MAX_NUM)
		{
			m_nNum = 0;
		}
	}
	//// ナンバーの設定
	//CTitleUI::SetNum(m_nNum);
}