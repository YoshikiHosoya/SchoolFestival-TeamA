// =====================================================================================================================================================================
//
// ステンシルシャドウの処理 [stencilshadow.h]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#ifndef _STENCILSHADOW_H_
#define _STENCILSHADOW_H_

// =====================================================================================================================================================================
// 前方宣言
// =====================================================================================================================================================================
class CScene2Dnew;

// =====================================================================================================================================================================
// インクルードファイル
// =====================================================================================================================================================================
#include "main.h"
#include "scene.h"
#include "sceneX.h"

// =====================================================================================================================================================================
// ステンシルシャドウクラス
// =====================================================================================================================================================================
class CStencilShadow : public CSceneX
{
public:
	CStencilShadow();						// コンストラクタ
	virtual ~CStencilShadow();				// デストラクタ
	
	/* メンバ関数 */
	void				Init();				// 初期化
	void				Uninit();			// 終了
	void				Update();			// 更新
	void				Draw();				// 描画

	/* 静的メンバ関数 */
	static	CStencilShadow	*Create();		// ステンシルシャドウの生成	
	static	HRESULT			Load();			// ロード
	static	void			Unload();		// アンロード

	/* メンバ関数 */
private:
	/* 静的メンバ変数 */
	static	LPDIRECT3DTEXTURE9	m_pTexture;			// 共有テクスチャのポインタ
	static MODEL_DRAWINFO		m_ModelDrawInfo;	// モデルの描画情報
	static CScene2Dnew			*m_pScene2Dnew;		//	Scene2Dnewのポインタ

	/* メンバ変数 */
	D3DXVECTOR3					m_posOld;			// 過去の位置
	D3DXVECTOR3					m_move;				// 移動
	D3DXVECTOR3					m_VtxMin;			// 最小頂点
	D3DXVECTOR3					m_VtxMax;			// 最大頂点
};
#endif
