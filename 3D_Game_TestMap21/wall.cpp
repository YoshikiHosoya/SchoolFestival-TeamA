// =====================================================================================================================================================================
//
// ウォールの処理 [wall.cpp]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#include "wall.h"			// インクルードファイル
#include "manager.h"
#include "renderer.h"
#include "game.h"
#include "debugproc.h"

// =====================================================================================================================================================================
// 静的メンバ変数の初期化
// =====================================================================================================================================================================
LPDIRECT3DTEXTURE9	CWall::m_apTexture[WALLTYPE::WALL_MAX]	= {};				// 先頭は型名

// =====================================================================================================================================================================
// マクロ定義
// =====================================================================================================================================================================
#define TEXTURE_FILE01		"data/TEXTURE/mural.jpg"		// 読み込むテクスチャファイル名			( 真ん中 )

#define WALL_SIZEX			(20000 / 2)						// 座標の幅
#define WALL_SIZEY			(20000 / 2)						// 座標の高さ

#define WALL_POS_Y			(300.0f)						// ウォールの高さ
#define WALL_POS_Z			(850.0f)						// ウォールの縦の位置

// =====================================================================================================================================================================
//
// コンストラクタ
//
// =====================================================================================================================================================================
CWall::CWall() :CScene3D(PRIORITY_BG)
{
}

// =====================================================================================================================================================================
//
// デストラクタ
//
// =====================================================================================================================================================================
CWall::~CWall()
{
}

// =====================================================================================================================================================================
//
// 初期化処理
//
// =====================================================================================================================================================================
void CWall::Init()
{
	// 変数初期化
	m_pos			= D3DXVECTOR3(0.0f, 0.0f, 0.0f);		// 位置
	m_col			= D3DXCOLOR(0.55f, 0.5f, 0.5f, 1.0f);	// 色
	m_type			= WALLTYPE::WALL_NONE;					// 壁の種類
	m_fAngle		= 0.0f;									// 角度
	m_fLength		= 0.0f;									// 長さ

	// 初期化
	CScene3D::Init();
	// サイズの設定
	CScene3D::SetSize(D3DXVECTOR3(WALL_SIZEX, WALL_SIZEY, 0.0f));
	//色の設定
	CScene3D::SetColor(m_col);
}

// =====================================================================================================================================================================
//
// 終了処理
//
// =====================================================================================================================================================================
void CWall::Uninit(void)
{
	CScene3D::Uninit();
}

// =====================================================================================================================================================================
//
// 更新処理
//
// =====================================================================================================================================================================
void CWall::Update(void)
{
	// 更新
	CScene3D::Update();

}

// =====================================================================================================================================================================
//
// 描画処理
//
// =====================================================================================================================================================================
void CWall::Draw(void)
{	
	CScene3D::Draw();
}

// =====================================================================================================================================================================
//
// 壁の生成
//
// =====================================================================================================================================================================
CWall * CWall::Create(WALLTYPE type)
{
	// 変数
	CWall *pWall;

	// メモリの確保
	pWall = new CWall();

	// 初期化
	pWall->Init();

	// ウォール位置の設定
	pWall->m_type = type;

	// 角度と長さの計算
	pWall->m_fLength = sqrtf(WALL_SIZEX * WALL_SIZEY + WALL_SIZEX * WALL_SIZEY);;
	pWall->m_fAngle = atan2f(WALL_SIZEX, WALL_SIZEY);;

	switch (type)
	{
	// 真ん中
	case CWall::WALL_CENTER:

		// 位置の設定
		pWall->SetPos(D3DXVECTOR3(0.0f, 0.0f, WALL_POS_Z));
		break;
	// 左
	case CWall::WALL_LEFT:

		// 回転の設定
		pWall->SetRot(D3DXVECTOR3(0.0f, -D3DX_PI * 0.5f, 0.0f));
		// 位置の設定
		pWall->SetPos(D3DXVECTOR3(-150.0f, 0.0f, 0.0f));


		break;
	// 右
	case CWall::WALL_RIGHT:

		// 回転の設定
		pWall->SetRot(D3DXVECTOR3(0.0f, D3DX_PI * 0.5f, 0.0f));
		// 位置の設定
		pWall->SetPos(D3DXVECTOR3(150.0f, 0.0f, 0.0f));

		break;

	}

	// テクスチャの割り当て
	pWall->BindTexture(m_apTexture[type]);
	
	// テクスチャの分割設定
	pWall->SetTexSeparate(250);

	return pWall;
}

// =====================================================================================================================================================================
//
// ロード
//
// =====================================================================================================================================================================
HRESULT CWall::Load(void)
{
	// デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = *CManager::GetRenderer()->GetDevice();

	for (int nCntItem = 0; nCntItem < WALLTYPE::WALL_MAX; nCntItem++)
	{
		// テクスチャ読み込み
		D3DXCreateTextureFromFile(pDevice, TEXTURE_FILE01, &m_apTexture[nCntItem]);
	}

	return S_OK;
}

// =====================================================================================================================================================================
//  
// アンロード
//
// =====================================================================================================================================================================
void CWall::Unload(void)
{
	for (int nCntTex = 0; nCntTex < WALLTYPE::WALL_MAX; nCntTex++)
	{
		// テクスチャの開放
		if (m_apTexture[nCntTex] != NULL)
		{
			m_apTexture[nCntTex]->Release();
			m_apTexture[nCntTex] = NULL;
		}
	}
}