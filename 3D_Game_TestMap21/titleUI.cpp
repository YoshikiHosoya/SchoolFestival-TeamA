// =====================================================================================================================================================================
//
// タイトルUIの処理 [titleUI.cpp]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#include "titleUI.h"			// インクルードファイル
#include "renderer.h"
#include "title.h"

// =====================================================================================================================================================================
// 静的メンバ変数の初期化
// =====================================================================================================================================================================
LPDIRECT3DTEXTURE9	CTitleUI::m_apTexture[TYTLEUITYPE::T_UI_MAX]	= {};				// 先頭は型名
int					CTitleUI::m_nNum								= 0;

// =====================================================================================================================================================================
// マクロ定義
// =====================================================================================================================================================================
#define TEXTURE_FILE00		"data/TEXTURE/title.png"	// 読み込むテクスチャファイル名		( タイトルロゴ )
#define TEXTURE_FILE01		"data/TEXTURE/enter.png"	// 読み込むテクスチャファイル名		( ゲームスタート )

#define BG_SIZEX			(SCREEN_WIDTH / 2)			// 座標の幅							( 背景 )
#define BG_SIZEY			(SCREEN_HEIGHT / 2)			// 座標の高さ						( 背景 )

#define LOGO_SIZEX			(600 / 2)					// 座標の幅							( タイトルロゴ )
#define LOGO_SIZEY			(170 / 2)					// 座標の高さ						( タイトルロゴ )

#define ENTER_SIZEX			(250 / 2)					// 座標の幅							( スタートボタン )
#define ENTER_SIZEY			(80 / 2)					// 座標の高さ						( スタートボタン )

#define BG_SPEED			(5)							// 背景の速さ

// =====================================================================================================================================================================
//
// コンストラクタ
//
// =====================================================================================================================================================================
CTitleUI::CTitleUI():CScene2D(PRIORITY_UI)
{
}

// =====================================================================================================================================================================
//
// デストラクタ
//
// =====================================================================================================================================================================
CTitleUI::~CTitleUI()
{
}

// =====================================================================================================================================================================
//
// 初期化処理
//
// =====================================================================================================================================================================
void CTitleUI::Init()
{
	// 変数の初期化
	m_bFlash = true;										// 点滅切り替え
	m_nNum = 0;												// ナンバー
	m_nTime = 0;											// タイム

	for (int nCnt = 0; nCnt < TYTLEUITYPE::T_UI_MAX; nCnt++)
	{
		// 色の初期化
		m_aCol[nCnt]	= D3DXCOLOR(1.0f, 1.0f, 1.0f, 0.0f);		// 色

		// シーン2Dの生成
		m_apScene2D[nCnt] = CScene2D::Create();

		if(m_apScene2D[nCnt])
		{ 
			// テクスチャの割り当て
			m_apScene2D[nCnt]->BindTexture(m_apTexture[nCnt]);

			// 初期化
			m_apScene2D[nCnt]->Init();
			
			switch (nCnt)
			{
			case TYTLEUITYPE::T_UI_LOGO:

				//位置の設定
				m_apScene2D[nCnt]->SetPos(D3DXVECTOR3(BG_SIZEX, 200.0f, 0.0f));
				// サイズの設定
				m_apScene2D[nCnt]->SetSize(D3DXVECTOR3(LOGO_SIZEX, LOGO_SIZEY, 0.0f));
				// 色の設定
				m_apScene2D[nCnt]->SetCol(D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f));
				break;

			case TYTLEUITYPE::T_UI_ENTER:

				//位置の設定
				m_apScene2D[nCnt]->SetPos(D3DXVECTOR3(BG_SIZEX, 600.0f, 0.0f));
				// サイズの設定
				m_apScene2D[nCnt]->SetSize(D3DXVECTOR3(ENTER_SIZEX, ENTER_SIZEY, 0.0f));
				// 色の設定
				m_apScene2D[nCnt]->SetCol(D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f));
				break;
			}
		}
	}
}

// =====================================================================================================================================================================
//
// 終了処理
//
// =====================================================================================================================================================================
void CTitleUI::Uninit(void)
{
	for (int nCnt = 0; nCnt < TYTLEUITYPE::T_UI_MAX; nCnt++)
	{
		if (m_apScene2D != NULL)
		{
			m_apScene2D[nCnt]->Uninit();
		}
	}
}

// =====================================================================================================================================================================
//
// 更新処理
//
// =====================================================================================================================================================================
void CTitleUI::Update(void)
{
	// 時間加算
	m_nTime++;

	for (int nCnt = 0; nCnt < TYTLEUITYPE::T_UI_MAX; nCnt++)
	{
		// UIの内容設定
		UIConfig(nCnt);

		// 更新
		m_apScene2D[nCnt]->Update();
	}
}

// =====================================================================================================================================================================
//
// 描画処理
//
// =====================================================================================================================================================================
void CTitleUI::Draw(void)
{	
	for (int nCnt = 0; nCnt < TYTLEUITYPE::T_UI_MAX; nCnt++)
	{
		if (m_apScene2D != NULL)
		{
			m_apScene2D[nCnt]->Draw();
		}
	}
}

// =====================================================================================================================================================================
//
// タイトルUIの生成
//
// =====================================================================================================================================================================
CTitleUI * CTitleUI::Create()
{
	// 変数
	CTitleUI *pTitleUI;

	// メモリの確保
	pTitleUI = new CTitleUI();

	// 初期化
	pTitleUI->Init();

	return pTitleUI;
}

// =====================================================================================================================================================================
//
// ロード
//
// =====================================================================================================================================================================
HRESULT CTitleUI::Load(void)
{
	// デバイスの取得
	LPDIRECT3DDEVICE9 pDevice = *CManager::GetRenderer()->GetDevice();

	// テクスチャファイル名
	char *sTextureFileName[T_UI_MAX]
	{
		{ TEXTURE_FILE00 },		// T_UI_LOGO			( ロゴ
		{ TEXTURE_FILE01 },		// T_UI_GAMESTART		( ゲームスタート
	};

	for (int nCntUI = 0; nCntUI < T_UI_MAX; nCntUI++)
	{
		// テクスチャ読み込み
		D3DXCreateTextureFromFile(pDevice, sTextureFileName[nCntUI], &m_apTexture[nCntUI]);
	}

	for (int nCnt = 0; nCnt < TYTLEUITYPE::T_UI_MAX; nCnt++)
	{
		// エラーチェック
		if (m_apTexture[nCnt] == NULL)
		{
			return E_FAIL;
		}
	}

	return S_OK;
}

// =====================================================================================================================================================================
//
// アンロード
//
// =====================================================================================================================================================================
void CTitleUI::Unload(void)
{
	for (int nCnt = 0; nCnt < TYTLEUITYPE::T_UI_MAX; nCnt++)
	{
		// テクスチャの開放
		if (m_apTexture[nCnt])
		{
			m_apTexture[nCnt]->Release();
			m_apTexture[nCnt] = NULL;
		}
	}
}

// =====================================================================================================================================================================
//
// UIの内容設定
//
// =====================================================================================================================================================================
void CTitleUI::UIConfig(int nCnt)
{
	switch (nCnt)
	{
	case TYTLEUITYPE::T_UI_LOGO:
		break;

	case TYTLEUITYPE::T_UI_ENTER:
		// 点滅の切り替え
		if (m_nTime >= 30)
		{
			// boolを反転
			m_bFlash = !m_bFlash;
			// 時間初期化
			m_nTime = 0;
		}

		// 点滅
		if (m_bFlash == true)
		{
			// α値を元に戻す
			m_aCol[nCnt].a = 1.0f;
		}
		else
		{
			// α値を0に
			m_aCol[nCnt].a = 0.0f;
		}
		// 色の設定
		m_apScene2D[nCnt]->SetCol(m_aCol[nCnt]);
		break;
	}
}