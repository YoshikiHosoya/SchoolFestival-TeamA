// =====================================================================================================================================================================
//
// マルチナンバーの処理 [multinumber.cpp]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#include "multinumber.h"			// インクルードファイル
#include "number.h"
#include "game.h"

// =====================================================================================================================================================================
// 静的メンバ変数の初期化
// =====================================================================================================================================================================
D3DXVECTOR2			CMultiNumber::m_UVsize					= D3DXVECTOR2(0.1f, 1.0f);		// 先頭は型名
int					CMultiNumber::m_nMultiNumber			= 0;							// 先頭は型名
CNumber				*CMultiNumber::m_apNumber[NUM_DIGIT]	= {};

// =====================================================================================================================================================================
// マクロ定義
// =====================================================================================================================================================================
#define SCORE_POSX			(1050.0f)		// スコアの座標
#define SCORE_POSY			(30.0f)			// スコアの座標
#define SCORE_SIZEX			(15.0f)			// スコアの幅
#define SCORE_SIZEY			(20.0f)			// スコアの高さ

#define SCORE_LIFEUP		(10000)			// 体力が増えるスコアの値

// =====================================================================================================================================================================
//
// コンストラクタ
//
// =====================================================================================================================================================================
CMultiNumber::CMultiNumber()
{
}

// =====================================================================================================================================================================
//
// デストラクタ
//
// =====================================================================================================================================================================
CMultiNumber::~CMultiNumber()
{
}

// =====================================================================================================================================================================
//
// 初期化処理
//
// =====================================================================================================================================================================
void CMultiNumber::Init(void)
{

}

// =====================================================================================================================================================================
//
// 終了処理
//
// =====================================================================================================================================================================
void CMultiNumber::Uninit(void)
{
	for (int nCnt = 0; nCnt < NUM_DIGIT; nCnt++)
	{
		if (m_apNumber != NULL)
		{
			m_apNumber[nCnt]->Release();
		}
	}
}

// =====================================================================================================================================================================
//
// 更新処理
//
// =====================================================================================================================================================================
void CMultiNumber::Update(void)
{

}

// =====================================================================================================================================================================
//
// 描画処理
//
// =====================================================================================================================================================================
void CMultiNumber::Draw(void)
{	

}

// =====================================================================================================================================================================
//
// マルチナンバーの生成
//
// =====================================================================================================================================================================
CMultiNumber * CMultiNumber::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size, int nValue, float fSpace)
{
	// 変数
	CMultiNumber *pMultiNumber;

	// メモリの確保
	pMultiNumber = new CMultiNumber;

	if (pMultiNumber != NULL)
	{
		// 初期化
		pMultiNumber->Init();

		for (int nCnt = 0; nCnt < NUM_DIGIT; nCnt++)
		{
			if (m_apNumber != NULL)
			{
				// シーン2Dの生成														// CScene2Dは = の形で生成する ( リターンが行われなくなるため )
				m_apNumber[nCnt] = CNumber::Create();

				// 初期化
				m_apNumber[nCnt]->Init();

				//位置の設定
				m_apNumber[nCnt]->SetPos(D3DXVECTOR3(pos.x + nCnt * fSpace, pos.y, 0.0f));

				// サイズの設定
				m_apNumber[nCnt]->SetSize(D3DXVECTOR3(size.x, size.y, 0.0f));

				// マルチナンバー初期化
				m_nMultiNumber = 0;
			}
		}
	}
	pMultiNumber->SetScore(nValue);

	return pMultiNumber;
}

// =====================================================================================================================================================================
//
// スコアの設定
//
// =====================================================================================================================================================================
void CMultiNumber::SetScore(int nScore)
{
	// 変数宣言
	int nNumber		= 0;

	for (int nCntScore = 0; nCntScore < NUM_DIGIT; nCntScore++)
	{
		// 桁数計算
		nNumber = nScore % (int)pow(10.0f, NUM_DIGIT - nCntScore) / (int)pow(10.0f, (NUM_DIGIT - nCntScore - 1));

		// アニメーションの設定
		m_apNumber[nCntScore]->SetAnim(m_UVsize, D3DXVECTOR2(nNumber * 0.1f, 0.0f));
	}
}