// =====================================================================================================================================================================
//
// リザルトの処理 [result.cpp]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#include "result.h"			// インクルードファイル
#include "resultUI.h"
#include "keyboard.h"
#include "fade.h"
#include "sound.h"
#include "scene.h"
#include "xinputGpad.h"
#include "map.h"
#include "objectmodel.h"
#include "wall.h"
#include "effect.h"

// =====================================================================================================================================================================
// 静的メンバ変数の初期化
// =====================================================================================================================================================================

// =====================================================================================================================================================================
// マクロ定義
// =====================================================================================================================================================================

// =====================================================================================================================================================================
//
// コンストラクタ
//
// =====================================================================================================================================================================
CResult::CResult()
{
}

// =====================================================================================================================================================================
//
// デストラクタ
//
// =====================================================================================================================================================================
CResult::~CResult()
{

}

// =====================================================================================================================================================================
//
// 初期化処理
//
// =====================================================================================================================================================================
HRESULT CResult::Init()
{
	// リザルトUIの画像の読み込み
	CResultUI::Load();
	// オブジェクトの読み込み
	CObjectModel::Load();
	// 壁の画像読み込み
	CWall::Load();
	// エフェクトの画像読み込み
	CEffect::Load();

	// リザルトUIの生成
	CResultUI::Create();
	// マップの生成
	CMap::ObjectLoad();
	// 壁の生成
	CWall::Create(CWall::WALLTYPE::WALL_LEFT);
	CWall::Create(CWall::WALLTYPE::WALL_RIGHT);

	return S_OK;
}

// =====================================================================================================================================================================
//
// 終了処理
//
// =====================================================================================================================================================================
void CResult::Uninit(void)
{
	// エフェクトの画像の破棄
	CEffect::Unload();
	// 壁の画像の破棄
	CWall::Unload();
	// オブジェクトの破棄
	CObjectModel::Unload();
	// リザルトUIの画像の破棄
	CResultUI::Unload();

	// 全ての開放
	CScene::ReleaseAll();

	// マップの開放
	CMap::ReleaseMap();
}

// =====================================================================================================================================================================
//
// 更新処理
//
// =====================================================================================================================================================================
void CResult::Update(void)
{
	// 変数
	CKeyboard	*pKeyboard = CManager::GetKeyboard();
	CXinputGpad *pXinputGpad = CManager::GetXinputGpad();

	// フェードしていないとき
	if (CFade::GetFadeState() == CFade::FADE_NONE)
	{
		// タイトルへ遷移
		if (pKeyboard->GetKeyboardTrigger(DIK_RETURN) || pXinputGpad->GetTriggerXinputGpad(CXinputGpad::XINPUT_A) || pXinputGpad->GetTriggerXinputGpad(CXinputGpad::XINPUT_START))
		{
			// サウンド
			CManager::GetSound()->PlaySound(CSound::SOUND_LABEL_SE_ENTER);
			// タイトルへ
			CFade::SetFade(CManager::RANKING);
		}
	}
}

// =====================================================================================================================================================================
//
// 描画処理
//
// =====================================================================================================================================================================
void CResult::Draw(void)
{	
}

// =====================================================================================================================================================================
//
// リザルトの生成
//
// =====================================================================================================================================================================
CResult * CResult::Create()
{
	// 変数
	CResult *pResult;

	// メモリの確保
	pResult = new CResult;

	// 初期化
	pResult->Init();

	return pResult;
}