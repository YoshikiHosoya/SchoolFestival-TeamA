// =====================================================================================================================================================================
//
// ランキングマネージャーの処理 [ranking.h]
// Author : fujiwara masato
//
// =====================================================================================================================================================================
#ifndef _RANKINGMANAGER_H_
#define _RANKINGMANAGER_H_

// =====================================================================================================================================================================
// インクルードファイル
// =====================================================================================================================================================================
#include "main.h"

// =====================================================================================================================================================================
// 前方宣言
// =====================================================================================================================================================================
class CRankingUI;
// =====================================================================================================================================================================
// リザルトUIクラス
// =====================================================================================================================================================================
class CRankingManager
{
public:
	// ランキングの種類
	enum RANKING_STATE
	{
		RANKING_STATE_0,
		RANKING_STATE_1,
	};
	CRankingManager();						// コンストラクタ
	~CRankingManager();						// デストラクタ

											/* メンバ関数 */
	HRESULT					Init(void);		// 初期化
	void					Uninit(void);	// 終了
	void					Update(void);	// 更新

	/* 静的メンバ関数 */
	/* 静的メンバ関数 */
	static					CRankingManager	*Create();						// 生成
	/* メンバ関数 */
	void					RankingUiOrder();								// Uiの出現順番

private:
	/* 静的メンバ変数 */
	/* メンバ関数 */
	/* メンバ変数 */
	RANKING_STATE			m_RankingState;									// ランキング状態
	CRankingUI				*m_pRankingUI;									// ランキングUIのポインタ
};
#endif