// =====================================================================================================================================================================
//
// チュートリアルuiの処理 [tutorialui.h]
// Author : fujiwara masato
//
// =====================================================================================================================================================================
#include "tutorial.h"
#include "manager.h"
#include "renderer.h"
#include "UIManager.h"
#include "tutorialUI.h"
#include "tutorialmanager.h"
#include "scene2D.h"

// =====================================================================================================================================================================
// マクロ定義
// =====================================================================================================================================================================
#define _CRT_SECURE_NO_WARNINGS // 警告除去

// =====================================================================================================================================================================
// 静的メンバ変数の初期化
// =====================================================================================================================================================================

//==========================================================
// コンストラクタ
//==========================================================
CTutorialUI::CTutorialUI()
{
	// 初期化
	for (int nCnt = 0; nCnt < TUTORIAL_UI::UI_UI_MAX; nCnt++)
	{
		m_apScene2D[nCnt] = nullptr;
	}

	m_nColCnt = 0;
}

//==========================================================
// デストラクタ
//==========================================================
CTutorialUI::~CTutorialUI()
{
}

//==========================================================
// 初期化
//==========================================================
HRESULT CTutorialUI::Init(void)
{
	for (int nCnt = 0; nCnt < TUTORIAL_UI::UI_UI_MAX; nCnt++)
	{
		if (!m_apScene2D[nCnt])
		{
			// ランキングタイトルロゴ
			if (nCnt == UI_NAME)
			{
				// シーン2Dの生成
				m_apScene2D[nCnt] = CScene2D::Create(D3DXVECTOR3((SCREEN_WIDTH * 0.5f), 65.0f, 0.0f), D3DXVECTOR3(500.0f, 50.0f, 0.0f));
				// テクスチャの割り当て
				m_apScene2D[nCnt]->BindTexture(CTexture::GetTexture(CTexture::TEX_UI_RANKING_NAME));
			}

			// 順位
			else if (nCnt == UI_ORDER1)
			{
			}
			// 順位
			else if (nCnt == UI_ORDER2)
			{
			}
			// 順位
			else if (nCnt == UI_ORDER3)
			{
			}
			// 順位
			else if (nCnt == UI_ORDER4)
			{
			}
			// 順位
			else if (nCnt == UI_ORDER5)
			{
			}
			// 順位
			else if (nCnt == UI_ORDER6)
			{
			}
		}
	}
	return S_OK;
}

//==========================================================
// 終了
//==========================================================
void CTutorialUI::Uninit(void)
{
	for (int nCnt = 0; nCnt < TUTORIAL_UI::UI_UI_MAX; nCnt++)
	{
		if (m_apScene2D[nCnt])
		{
			// 終了
			m_apScene2D[nCnt]->Uninit();

			// デリートフラグを有効にする
			SetDeleteFlag(true);
		}
	}
}

//==========================================================
// 更新
//==========================================================
void CTutorialUI::Update(void)
{
	for (int nCnt = 0; nCnt < TUTORIAL_UI::UI_UI_MAX; nCnt++)
	{
		if (m_apScene2D[nCnt])
		{
			if (m_apScene2D[nCnt]->GetDisp())
			{
				// 更新
				m_apScene2D[nCnt]->Update();
			}
		}
	}
}

//==========================================================
// 描画処理
//==========================================================
void CTutorialUI::Draw(void)
{
	for (int nCnt = 0; nCnt < TUTORIAL_UI::UI_UI_MAX; nCnt++)
	{
		if (m_apScene2D[nCnt])
		{
			// 描画
			m_apScene2D[nCnt]->Draw();
		}
	}
}

// =====================================================================================================================================================================
//
// チュートリアルUIの生成
//
// =====================================================================================================================================================================
CTutorialUI * CTutorialUI::Create()
{
	//メモリの確保
	CTutorialUI *pTutorialUI = new CTutorialUI();

	// 初期化
	pTutorialUI->Init();

	//オブジェタイプ設定してSceneに所有権を渡す
	CUIManager::AddUIList(std::move(pTutorialUI));

	return pTutorialUI;
}
// =====================================================================================================================================================================
//
// 点滅処理
//
// =====================================================================================================================================================================
void CTutorialUI::Flashing(CScene2D *m_apScene2D)
{
	// カウント加算
	m_nColCnt++;
	// 余りが0の時透明にする
	if (m_nColCnt % 60 == 0)
	{
		m_apScene2D->SetColor(D3DXCOLOR(1.0f, 1.0f, 1.0f, 0.0f));
	}
	// 余りが0の時通常状態にする
	else if (m_nColCnt % 30 == 0)
	{
		m_apScene2D->SetColor(D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f));
	}
}
