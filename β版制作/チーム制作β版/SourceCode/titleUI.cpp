// =====================================================================================================================================================================
//
// タイトルUIの処理 [titleUI.cpp]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#include "main.h"			// インクルードファイル
#include "titleUI.h"
#include "debugproc.h"
#include "UIManager.h"
#include "scene2D.h"

// =====================================================================================================================================================================
// 静的メンバ変数の初期化
// =====================================================================================================================================================================

// =====================================================================================================================================================================
// マクロ定義
// =====================================================================================================================================================================

// =====================================================================================================================================================================
//
// コンストラクタ
//
// =====================================================================================================================================================================
CTitleUI::CTitleUI()
{
	// 初期化
	for (int nCnt = 0; nCnt < TITLE_UI::TITLE_UI_MAX; nCnt++)
	{
		m_apScene2D[nCnt] = nullptr;
	}
	m_nColCnt = 0;
}

// =====================================================================================================================================================================
//
// デストラクタ
//
// =====================================================================================================================================================================
CTitleUI::~CTitleUI()
{
}

// =====================================================================================================================================================================
//
// 初期化処理
//
// =====================================================================================================================================================================
HRESULT CTitleUI::Init(void)
{
	for (int nCnt = 0; nCnt < TITLE_UI::TITLE_UI_MAX; nCnt++)
	{

		if (!m_apScene2D[nCnt])
		{
			switch (nCnt)
			{
			// タイトルロゴ
			case TITLE_UI::TITLE_LOGO:
				// シーン2Dの生成
				m_apScene2D[nCnt] = CScene2D::Create(D3DXVECTOR3((SCREEN_WIDTH * 0.5f), 325.0f, 0.0f), D3DXVECTOR3(400.0f, 300.0f, 0.0f));
				// テクスチャの割り当て
				m_apScene2D[nCnt]->BindTexture(CTexture::GetTexture(CTexture::TEX_UI_TITLE));
				break;

			// スタート
			case TITLE_UI::UI_START:
				// シーン2Dの生成
				m_apScene2D[nCnt] = CScene2D::Create(D3DXVECTOR3((SCREEN_WIDTH * 0.5f), 600.0f, 0.0f), D3DXVECTOR3(250.0f, 30.0f, 0.0f));
				// テクスチャの割り当て
				m_apScene2D[nCnt]->BindTexture(CTexture::GetTexture(CTexture::TEX_UI_START));
				break;
			}
		}
	}
	return S_OK;
}

// =====================================================================================================================================================================
//
// 終了処理
//
// =====================================================================================================================================================================
void CTitleUI::Uninit(void)
{
	for (int nCnt = 0; nCnt < TITLE_UI::TITLE_UI_MAX; nCnt++)
	{
		if (m_apScene2D[nCnt])
		{
			// 終了
			m_apScene2D[nCnt]->Rerease();
			m_apScene2D[nCnt] = nullptr;

			// デリートフラグを有効にする
			SetDeleteFlag(true);
		}
	}
}

// =====================================================================================================================================================================
//
// 更新処理
//
// =====================================================================================================================================================================
void CTitleUI::Update(void)
{
	for (int nCnt = 0; nCnt < TITLE_UI::TITLE_UI_MAX; nCnt++)
	{
		if (m_apScene2D[nCnt])
		{
			// スタートロゴだった時
			if (nCnt == UI_START)
			{
				Flashing(m_apScene2D[nCnt]);
			}
			// 更新
			m_apScene2D[nCnt]->Update();
		}
	}

}

// =====================================================================================================================================================================
//
// 描画処理
//
// =====================================================================================================================================================================
void CTitleUI::Draw(void)
{
	for (int nCnt = 0; nCnt < TITLE_UI::TITLE_UI_MAX; nCnt++)
	{
		if (m_apScene2D[nCnt])
		{
			// 描画
			m_apScene2D[nCnt]->Draw();
		}
	}
}

// =====================================================================================================================================================================
//
// タイトルUIの生成
//
// =====================================================================================================================================================================
CTitleUI * CTitleUI::Create()
{
	//メモリの確保
	CTitleUI *pTitleUI = new CTitleUI();

	// 初期化
	pTitleUI->Init();

	//オブジェタイプ設定してSceneに所有権を渡す
	CUIManager::AddUIList(std::move(pTitleUI));

	return pTitleUI;
}
// =====================================================================================================================================================================
//
// 点滅処理
//
// =====================================================================================================================================================================
void CTitleUI::Flashing(CScene2D *m_apScene2D)
{
	// カウント加算
	m_nColCnt++;
	// 余りが0の時透明にする
	if (m_nColCnt % 60 == 0)
	{
		m_apScene2D->SetColor(D3DXCOLOR(1.0f, 1.0f, 1.0f, 0.0f));
	}
	// 余りが0の時通常状態にする
	else if (m_nColCnt % 30 == 0)
	{
		m_apScene2D->SetColor(D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f));
	}
}
