// =====================================================================================================================================================================
//
// アイテム処理の説明[item.h]
// Author : Fujiwara Masato
//
// =====================================================================================================================================================================
#ifndef _ITEM_H_
#define _ITEM_H_	 // ファイル名を基準を決める

// =====================================================================================================================================================================
// インクルードファイル
// =====================================================================================================================================================================
#include "scene3D.h"

// =====================================================================================================================================================================
// マクロ定義
// =====================================================================================================================================================================

// =====================================================================================================================================================================
// 前方宣言
// =====================================================================================================================================================================
class CCollision;

// =====================================================================================================================================================================
// アイテムクラス
// =====================================================================================================================================================================
class CItem : public CScene3D
{
public:
	/* 列挙型 */
	// タイプ
	typedef enum
	{
		ITEMTYPE_HEAVYMACHINEGUN,	// ヘビーマシンガン
		ITEMTYPE_SHOTGUN,			// ショットガン
		ITEMTYPE_LASERGUN,			// レーザーガン
		ITEMTYPE_ROCKETLAUNCHER,	// ロケットランチャー
		ITEMTYPE_FLAMESHOT,			// フレイムショット
		ITEMTYPE_ENEMYCHASER,		// エネミーチェイサー
		ITEMTYPE_IRONLIZARD,		// アイアンリザード
		ITEMTYPE_BEAR,				// 熊-スコアアップ
		ITEMTYPE_BOMBUP,			// 爆弾の数を増やす
		ITEMTYPE_ENERGYUP,			// 乗り物の耐久値を回復する
		ITEMTYPE_BULLETUP,			// ハンドガン以外の弾の残弾数を増やす
		ITEMTYPE_MAX
	} ITEMTYPE;

	/* 関数 */
	CItem(OBJ_TYPE type);														// コンストラクタ
	~CItem();																	// デストラクタ

	/* メンバ関数 */
	HRESULT						Init();											// 初期化
	void						Uninit();										// 終了
	void						Update();										// 更新
	void						Draw();											// 描画
	void						ItemType(ITEMTYPE type);						// アイテム取得時の種類別処理
	void						DebugInfo();									// デバッグ
	void						HitItem(ITEMTYPE type);							// アイテム取得時の種類別処理
	ITEMTYPE					GetItemType() { return m_Type; };				// アイテムタイプの取得
	CCollision					*GetCollision() { return m_pCollision; };		// 当たり判定
	void						SetDropPos(D3DXVECTOR3 &characterpos);			// アイテムを生成位置を設定
	void						RemainTimer();									// 滞在時間を計算し0になったら削除する

	/* 静的メンバ関数 */
	static	CItem				*Create(D3DXVECTOR3 pos, ITEMTYPE type);		// アイテムの生成
	static	CItem				*DropCreate(D3DXVECTOR3 pos);					// キャラクターがアイテムを落とす時の生成
	static	void				SwitchTexture(ITEMTYPE type, CItem *pItem);		// 種類別テクスチャ設定
	static	ITEMTYPE			RandDropItem();									// アイテムの種類をランダムに計算
	static	bool				DropRate();										// アイテムをドロップする確率
protected:
private:
	/* メンバ変数 */
	ITEMTYPE					m_Type;											// アイテムタイプ
	D3DXMATRIX					m_mtxWorld;										// ワールドマトリックス
	CCollision					*m_pCollision;									// 当たり判定
	int							m_nRemainTime;									// アイテムがマップに残る時間
};
#endif