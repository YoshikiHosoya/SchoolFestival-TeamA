// =====================================================================================================================================================================
//
// 戦車の銃の処理 [tankgun.cpp]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#include "tankgun.h"			// インクルードファイル
#include "manager.h"
#include "renderer.h"
#include "game.h"
#include "debugproc.h"
#include "texture.h"
#include "particle.h"

// =====================================================================================================================================================================
// 静的メンバ変数の初期化
// =====================================================================================================================================================================

// =====================================================================================================================================================================
// マクロ定義
// =====================================================================================================================================================================
// =====================================================================================================================================================================
//
// コンストラクタ
//
// =====================================================================================================================================================================
CTankGun::CTankGun(OBJ_TYPE type) :CBullet(type)
{
	SetObjType(OBJTYPE_BULLET);
}

// =====================================================================================================================================================================
//
// デストラクタ
//
// =====================================================================================================================================================================
CTankGun::~CTankGun()
{
}

// =====================================================================================================================================================================
//
// 初期化処理
//
// =====================================================================================================================================================================
HRESULT CTankGun::Init()
{
	// 初期化
	CBullet::Init();

	return S_OK;
}

// =====================================================================================================================================================================
//
// 終了処理
//
// =====================================================================================================================================================================
void CTankGun::Uninit(void)
{
	// 終了
	CBullet::Uninit();
}

// =====================================================================================================================================================================
//
// 更新処理
//
// =====================================================================================================================================================================
void CTankGun::Update(void)
{
	// 更新
	CBullet::Update();

	//パーティクル発生 軌跡みたいな
	CParticle::CreateFromText(GetPosition(),D3DXVECTOR3(0.0f,0.0f,GetRot().x + D3DX_PI * 0.5f), CParticleParam::EFFECT_TANKGUN);

}

// =====================================================================================================================================================================
//
// 描画処理
//
// =====================================================================================================================================================================
void CTankGun::Draw(void)
{
	// 描画
	CBullet::Draw();
}

// =====================================================================================================================================================================
//
// 弾を消す処理
//
// =====================================================================================================================================================================
void CTankGun::DeleteBullet()
{
	CBullet::DeleteBullet();
}

// =====================================================================================================================================================================
//
// 弾の反応
//
// =====================================================================================================================================================================
void CTankGun::BulletReaction(D3DXVECTOR3 rot)
{
}

// =====================================================================================================================================================================
//
// デバッグ
//
// =====================================================================================================================================================================
void CTankGun::DebugInfo()
{
}

// =====================================================================================================================================================================
//
// 戦車の銃の生成
//
// =====================================================================================================================================================================
CTankGun * CTankGun::Create(D3DXVECTOR3 rot)
{
	// 変数
	CTankGun *pTankGun;

	// メモリの確保
	pTankGun = new CTankGun(OBJTYPE_BULLET);

	// 戦車の銃のパラメーター取得
	BULLET_PARAM *pBulletParam = pTankGun->GetBulletParam(CGun::GUNTYPE_TANKGUN);

	// 初期化
	pTankGun->Init();

	// 撃つ方向に合わせる
	pTankGun->GetMove() = D3DXVECTOR3(-sinf(rot.x) * pBulletParam->fBulletSpeed,
										cosf(rot.x) * cosf(rot.y) * pBulletParam->fBulletSpeed,
										sinf(rot.y) * cosf(rot.x) * pBulletParam->fBulletSpeed);

	pTankGun->GetRot() = rot;

	// モデルタイプの設定
	pTankGun->SetType(BULLET_MODEL);

	// モデルカウントの設定
	pTankGun->SetModelConut(MODEL_BULLET_SPHERE);

	return pTankGun;
}