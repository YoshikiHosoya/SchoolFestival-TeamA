//------------------------------------------------------------------------------
//
//デバッグルーム  [Debug_room.cpp]
//Author:Yoshiki Hosoya
//
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//インクルード
//------------------------------------------------------------------------------
#include "Debug_room.h"
#include "../manager.h"
#include "../renderer.h"
#include "../fade.h"
#include "../camera.h"
#include "../Map.h"
#include "../meshfield.h"
#include "Debug_OneModelCharacter.h"
//------------------------------------------------------------------------------
//静的メンバ変数の初期化
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//マクロ
//------------------------------------------------------------------------------
#define DEFAULT_PLAYER_POS	(D3DXVECTOR3(0.0f, 0.0f, -800.0f))		//プレイヤーの初期座標
//------------------------------------------------------------------------------
//コンストラクタ
//------------------------------------------------------------------------------
CDebug_Room::CDebug_Room()
{

}
//------------------------------------------------------------------------------
//デストラクタ
//------------------------------------------------------------------------------
CDebug_Room::~CDebug_Room()
{


}

//------------------------------------------------------------------------------
//初期化処理
//------------------------------------------------------------------------------
HRESULT CDebug_Room::Init(HWND hWnd)
{
	//カメラ座標設定
	CManager::GetRenderer()->GetCamera()->SetCameraPos(DEFAULT_PLAYER_POS, DEFAULT_PLAYER_POS + D3DXVECTOR3(0.0f, 500, -300));
	CManager::GetRenderer()->GetCamera()->SetState(CCamera::CAMERA_DEBUG);

	CMeshField::Create(ZeroVector3, D3DXVECTOR3(100.0f, 100.0f, 100.0f), INTEGER2(20, 20));

	Debug_OneModelCharacter::Create(ZeroVector3, ZeroVector3);

	return S_OK;
}

//------------------------------------------------------------------------------
//終了処理
//------------------------------------------------------------------------------
void CDebug_Room::Uninit()
{

	//終了処理
	CScene::ReleaseAll();
}

//------------------------------------------------------------------------------
//更新処理
//------------------------------------------------------------------------------
void CDebug_Room::Update()
{

}

//------------------------------------------------------------------------------
//描画処理
//------------------------------------------------------------------------------
void CDebug_Room::Draw()
{

}
//------------------------------------------------------------------------------
//デバッグ情報表記
//------------------------------------------------------------------------------
void CDebug_Room::ShowDebugInfo()
{
#ifdef _DEBUG

#endif //_DEBUG
}
