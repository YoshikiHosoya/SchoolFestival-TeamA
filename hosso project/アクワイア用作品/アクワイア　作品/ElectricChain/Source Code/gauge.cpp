//------------------------------------------------------------------------------
//
//ゲージ処理  [gauge.cpp]
//Author:Yoshiki Hosoya
//
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//インクルード
//------------------------------------------------------------------------------
#include "gauge.h"		//インクルードファイル 
#include "scene2D.h"
#include "manager.h"
#include "renderer.h"

//------------------------------------------------------------------------------
//マクロ定義
//------------------------------------------------------------------------------
#define INTERVAL	(10)

//------------------------------------------------------------------------------
//静的メンバ変数の初期化
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//コンストラクタ
//------------------------------------------------------------------------------
CGauge::CGauge()
{
	//初期化
	m_nLife = 0;
	m_nLifeBlue = 0;
	m_nLifeRed = 0;
	m_nLifeRedInterval = 0;
	m_nMaxLife = 0;
	m_nRedGaugeDeleteSpeed = 0;
}

//------------------------------------------------------------------------------
//デストラクタ
//------------------------------------------------------------------------------
CGauge::~CGauge()
{
}
//------------------------------------------------------------------------------
//初期化処理
//------------------------------------------------------------------------------
HRESULT CGauge::Init()
{

	return S_OK;
}
//------------------------------------------------------------------------------
//終了処理
//------------------------------------------------------------------------------
void CGauge::Uninit()
{

}
//------------------------------------------------------------------------------
//更新処理
//------------------------------------------------------------------------------
void CGauge::Update()
{
	//赤ゲージのインターバル
	m_nLifeRedInterval--;

	//HPが減っているとき
	if (m_nLife < m_nLifeRed)
	{
		//インターバルがなくなった時
		if (m_nLifeRedInterval < 0)
		{
			//赤ゲージを減らす
			m_nLifeRed -= m_nRedGaugeDeleteSpeed;

			//緑ライフと同じとこまできたら合わせる
			if (m_nLife > m_nLifeRed)
			{
				m_nLifeRed = m_nLife;
			}
			//ゲージの倍率計算
			CalcGaugeMag();

			//赤ゲージがなくなった時
			if (m_nLifeRed <= 0)
			{
				//消去
				DeleteGauge();
				return;
			}
		}
	}

}
//------------------------------------------------------------------------------
//描画処理
//------------------------------------------------------------------------------
void CGauge::Draw()
{
}
//------------------------------------------------------------------------------
//デバッグ情報表示
//------------------------------------------------------------------------------
void CGauge::ShowDebugInfo()
{
#ifdef _DEBUG

#endif // _DEBUG
}

//------------------------------------------------------------------------------
//ライフ設定
//------------------------------------------------------------------------------
void CGauge::SetLife(int nLife, int nBlueLife)
{
	//HP設定
	m_nLife = nLife;
	m_nLifeBlue = nBlueLife;
	m_nLifeRedInterval = INTERVAL;

	//赤ゲージの減る速度計算
	m_nRedGaugeDeleteSpeed = ((m_nLifeRed - m_nLife) / 50) + 1;

	//ライフがゼロになった時
	if (m_nLife <= 0)
	{
		//0
		m_nLife = 0;
	}

	//倍率計算
	CalcGaugeMag();
}
//------------------------------------------------------------------------------
//ライフ設定
//------------------------------------------------------------------------------
void CGauge::SetMaxLife(int nMaxLife)
{
	m_nLifeBlue = m_nLifeRed = m_nLife = m_nMaxLife = nMaxLife;

	//ゲージの倍率計算
	CalcGaugeMag();
}

//------------------------------------------------------------------------------
//メモリ開放処理
//------------------------------------------------------------------------------
void CGauge::DeleteGauge()
{
	Release();
}
//------------------------------------------------------------------------------
//ゲージの倍率計算
//------------------------------------------------------------------------------
void CGauge::CalcGaugeMag()
{
	//倍率の計算
	float fGreenMag = 1 - (float(m_nLifeBlue) / float(m_nMaxLife));
	float fRedMag = 1 - (float(m_nLifeRed) / float(m_nMaxLife));
	float fBlueMag = 1 - (float(m_nLife) / float(m_nMaxLife));

	//ゲージ更新
	UpdateGaugeMag(fGreenMag, fRedMag, fBlueMag);
}
