// =====================================================================================================================================================================
//
// skydroneのAIの処理 [skydroneAI.cpp]
// Author : FujiwaraMasato
//
// =====================================================================================================================================================================
#include "skydroneAI.h"		// インクルードファイル
#include "renderer.h"
#include "WeakEnemy.h"
#include "Player.h"
#include "manager.h"
#include "BaseMode.h"
#include "map.h"
#include "gun.h"
#include "ModelSet.h"
#include "texture.h"
#include "particle.h"

// =====================================================================================================================================================================
// 静的メンバ変数の初期化
// =====================================================================================================================================================================

// =====================================================================================================================================================================
// マクロ定義
// =====================================================================================================================================================================
#define SHOT_COOLTIME				(230)					// 撃つまでの時間
#define MOVE_STOP_TIME				(120)					// 止まるまでの時間
#define MOVE_SPEED					(3.0f)					// 移動スピード

// =====================================================================================================================================================================
//
// コンストラクタ
//
// =====================================================================================================================================================================
CSkyDroneAI::CSkyDroneAI()
{
	m_pEnemyPass = nullptr;
}

// =====================================================================================================================================================================
//
// デストラクタ
//
// =====================================================================================================================================================================
CSkyDroneAI::~CSkyDroneAI()
{
	m_pEnemyPass = nullptr;
}

// =====================================================================================================================================================================
//
// 初期化処理
//
// =====================================================================================================================================================================
HRESULT CSkyDroneAI::Init(void)
{
	m_nCntShotFrame = 0;						// 撃つまでのカウント
	m_nCntMoveStopFrame = 0;					// 止まるまでのカウント
	m_StateAI = DRONEAI_STATE::NONE;			// AIの状態
	return S_OK;
}

// =====================================================================================================================================================================
//
// 終了処理
//
// =====================================================================================================================================================================
void CSkyDroneAI::Uninit(void)
{
}

// =====================================================================================================================================================================
//
// 更新処理
//
// =====================================================================================================================================================================
void CSkyDroneAI::Update(void)
{
	// ドローンのAIの状態
	SkyDroneAIState();
}

// =====================================================================================================================================================================
//
// 描画処理
//
// =====================================================================================================================================================================
void CSkyDroneAI::Draw(void)
{
}

// =====================================================================================================================================================================
//
// デバッグ情報表記
//
// =====================================================================================================================================================================
void CSkyDroneAI::DebugInfo(void)
{
}

// =====================================================================================================================================================================
//
// AIの生成
//
// =====================================================================================================================================================================
CSkyDroneAI * CSkyDroneAI::CreateAI(CWeakEnemy *pEnemy)
{
	// 変数
	CSkyDroneAI	*pSkyDroneAI;

	// メモリの確保
	pSkyDroneAI = new CSkyDroneAI();

	// 初期化
	pSkyDroneAI->Init();

	// エネミーの情報
	pSkyDroneAI->m_pEnemyPass = pEnemy;

	return pSkyDroneAI;
}

// =====================================================================================================================================================================
//
// AIの状態取得
//
// =====================================================================================================================================================================
CSkyDroneAI::DRONEAI_STATE CSkyDroneAI::GetAIType(void)
{
	return m_StateAI;
}

// =====================================================================================================================================================================
//
// ドローンのAIの状態
//
// =====================================================================================================================================================================
void CSkyDroneAI::SkyDroneAIState()
{
	// プレイヤーのポインタ取得
	CPlayer *pPlayer[MAX_CONTROLLER];

	for (int nCnt = 0; nCnt < MAX_CONTROLLER; nCnt++)
	{
		pPlayer[nCnt] = CManager::GetBaseMode()->GetPlayer((TAG)nCnt);
	}

	// カウントアップ
	m_nCntShotFrame++;

	if (m_nCntShotFrame >= 120)
	{
		if (m_nCntShotFrame > 120)
		{
			if (pPlayer[0])
			{
				//射撃方向の計算
				D3DXVECTOR3 ShotVec = pPlayer[0]->GetPosition() - m_pEnemyPass->GetPosition();
				//値の正規化
				D3DXVec3Normalize(&ShotVec, &ShotVec);
				//撃つ向きの設定
				m_pEnemyPass->GetGunPtr()->SetShotRot(D3DXVECTOR3(0.0f, 0.0f, atan2f(-ShotVec.x, ShotVec.y)));
			}

			// 発射
			m_pEnemyPass->GetGunPtr()->Shot();
			m_nCntShotFrame = 0;
		}
		else
		{
			//パーティクル発生 軌跡みたいな
			CParticle::CreateFromText(m_pEnemyPass->GetPosition(), m_pEnemyPass->GetRot(), CParticleParam::EFFECT_CHARGE);
		}
	}

}