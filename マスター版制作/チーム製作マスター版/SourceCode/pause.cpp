// =====================================================================================================================================================================
//
// ポーズの処理 [pause.cpp]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#include "pause.h"			// インクルードファイル
#include "inputKeyboard.h"
#include "renderer.h"
#include "scene.h"
#include "XInputPad.h"
#include "fade.h"
#include "manager.h"
#include "sound.h"
#include "UIManager.h"
#include "pauseUI.h"
#include "GameManager.h"
#include "game.h"

// =====================================================================================================================================================================
// 静的メンバ変数の初期化
// =====================================================================================================================================================================
int					CPause::m_nNum = 1;

// =====================================================================================================================================================================
// マクロ定義
// =====================================================================================================================================================================

// =====================================================================================================================================================================
//
// コンストラクタ
//
// =====================================================================================================================================================================
CPause::CPause()
{
	m_pPauseUI	= nullptr;
	m_nNum		= 1;
}

// =====================================================================================================================================================================
//
// デストラクタ
//
// =====================================================================================================================================================================
CPause::~CPause()
{
	m_pPauseUI->SetDeleteFlag(true);
	m_pPauseUI = nullptr;
}

// =====================================================================================================================================================================
//
// 初期化処理
//
// =====================================================================================================================================================================
HRESULT CPause::Init()
{
	// タイトルUIの生成
	m_pPauseUI = CPauseUI::Create();

	return S_OK;
}

// =====================================================================================================================================================================
//
// 終了処理
//
// =====================================================================================================================================================================
void CPause::Uninit(void)
{
}

// =====================================================================================================================================================================
//
// 更新処理
//
// =====================================================================================================================================================================
void CPause::Update(void)
{
	// 矢印の移動
	ArrowMove();

	// ポーズの更新
	if (m_pPauseUI)
	{
		m_pPauseUI->Update();
	}

	// ポーズの設定
	PauseConfig();
}

// =====================================================================================================================================================================
//
// 描画処理
//
// =====================================================================================================================================================================
void CPause::Draw(void)
{
}

// =====================================================================================================================================================================
//
// ポーズの生成
//
// =====================================================================================================================================================================
CPause * CPause::Create()
{
	// 変数
	CPause *pPause;

	// メモリの確保
	pPause = new CPause();

	// 初期化
	pPause->Init();

	return pPause;
}

// =====================================================================================================================================================================
//
// ポーズの設定
//
// =====================================================================================================================================================================
void CPause::PauseConfig()
{
	CGameManager *pGameManager = CManager::GetGame()->GetGameManager();

	// ポーズで選択し遷移
	switch (m_nNum)
	{
	case PAUSE_EXIT:					// 再開
		// 決定ボタンを押したとき
		if (CHossoLibrary::PressDeterminationButton())
		{
			//決定音
			CManager::GetSound()->Play(CSound::LABEL_SE_DECISION);

			// ポーズで止める設定
			CScene::StopUpdate();

			// 前回のステートに戻す
			if (pGameManager)
			{
				pGameManager->SetGameState(pGameManager->GetGameStateOld());
			}
		}
		break;

	case PAUSE_RESET:					// タイトル
		// 決定ボタンを押したとき
		if (CHossoLibrary::PressDeterminationButton())
		{
			//決定音
			CManager::GetSound()->Play(CSound::LABEL_SE_DECISION);
			// タイトルへ遷移
			CManager::GetRenderer()->GetFade()->SetFade(CFADE::FADETYPE::FADETYPE_MODE, CManager::MODE_TITLE);

		}
		break;
	}
}

// =====================================================================================================================================================================
//
// 矢印の移動
//
// =====================================================================================================================================================================
void CPause::ArrowMove()
{
	// === アイコン移動 ===
	if (CHossoLibrary::CheckPadStick() == DIRECTION::UP)
	{
		// デクリメント
		m_nNum--;

		// 最後に戻す
		if (m_nNum < PAUSE_MENU::PAUSE_EXIT)
		{
			m_nNum = PAUSE_MENU::PAUSE_RESET;
		}
	}
	if (CHossoLibrary::CheckPadStick() == DIRECTION::DOWN)
	{
		// インクリメント
		m_nNum++;

		// 最初に戻す
		if (m_nNum > PAUSE_MENU::PAUSE_RESET)
		{
			m_nNum = PAUSE_MENU::PAUSE_EXIT;
		}
	}
}