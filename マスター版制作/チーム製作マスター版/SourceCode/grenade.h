// =====================================================================================================================================================================
//
// グレネードの処理 [grenade.h]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#ifndef _GRENADE_H_
#define _GRENADE_H_

// =====================================================================================================================================================================
// インクルードファイル
// =====================================================================================================================================================================
#include "main.h"
#include "bullet.h"
#include "grenadefire.h"

// =====================================================================================================================================================================
// グレネードクラス
// =====================================================================================================================================================================
class CGrenade : public CBullet
{
public:
	// ----- グレネードのパラメーター -----
	typedef struct
	{
		D3DXVECTOR3			Move;			// 移動量
		float				fGravity;		// 重力
		bool				bRot;			// 回転するかのフラグ
	}GRENADE_PARAM;

	CGrenade(OBJ_TYPE type);								// コンストラクタ
	~CGrenade();											// デストラクタ

	/* メンバ関数 */
	HRESULT						Init();						// 初期化
	void						Uninit();					// 終了
	void						Update();					// 更新
	void						Draw();						// 描画
	void						DeleteBullet();				// 弾を消す処理

	/* 静的メンバ関数 */
	static	CGrenade			*Create(D3DXVECTOR3 rot, CGrenadeFire::GRENADE_TYPE type);		// グレネードの生成
	static	void				GrenadePramLoad();												// グレネードのパラメーターのロード

private:
	/* メンバ変数 */
	D3DXVECTOR3					m_move;						// 移動値
	D3DXVECTOR3					m_rot;						// 回転
	CGrenadeFire::GRENADE_TYPE	m_type;						// グレネードの種類
	/* 静的メンバ変数 */
	static char					*m_GrenadeFileName[CGrenadeFire::GRENADE_TYPE::GRENADE_TYPE_MAX];	// グレネードのファイル名
	static	GRENADE_PARAM		m_GrenadeParam[CGrenadeFire::GRENADE_TYPE::GRENADE_TYPE_MAX];		// グレネードのパラメーター

};
#endif