// =====================================================================================================================================================================
//
// バレットの処理 [bullet.cpp]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#include "bullet.h"			// インクルードファイル
#include "manager.h"
#include "renderer.h"
#include "game.h"
#include "debugproc.h"

// =====================================================================================================================================================================
// 静的メンバ変数の初期化
// =====================================================================================================================================================================

// =====================================================================================================================================================================
// マクロ定義
// =====================================================================================================================================================================

// =====================================================================================================================================================================
//
// コンストラクタ
//
// =====================================================================================================================================================================
CBullet::CBullet() :CScene3D()
{
}

// =====================================================================================================================================================================
//
// デストラクタ
//
// =====================================================================================================================================================================
CBullet::~CBullet()
{
}

// =====================================================================================================================================================================
//
// 初期化処理
//
// =====================================================================================================================================================================
HRESULT CBullet::Init()
{
	// 変数初期化
	m_move			= D3DXVECTOR3(0.0f, 0.0f, 0.0f);			// 移動値

	// 初期化
	CScene3D::Init();

	return S_OK;
}

// =====================================================================================================================================================================
//
// 終了処理
//
// =====================================================================================================================================================================
void CBullet::Uninit(void)
{
	CScene3D::Uninit();
}

// =====================================================================================================================================================================
//
// 更新処理
//
// =====================================================================================================================================================================
void CBullet::Update(void)
{
	// プレイヤーの情報取得
	CPlayer *pPlayer = CManager::GetGame()->GetPlayer();

	// 位置の取得
	D3DXVECTOR3 pos = CScene3D::GetPosition();

	// 位置更新
	pos += m_move;

	// 位置の設定
	CScene3D::SetPosition(pos);

	// 更新
	CScene3D::Update();
}

// =====================================================================================================================================================================
//
// 描画処理
//
// =====================================================================================================================================================================
void CBullet::Draw(void)
{	
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRendere()->GetDevice();	// デバイスの取得

	// 描画
	CScene3D::Draw();

	// アルファテストを無効にする
	pDevice->SetRenderState(D3DRS_ALPHATESTENABLE, FALSE);
}

// =====================================================================================================================================================================
//
// ロード
//
// =====================================================================================================================================================================
HRESULT CBullet::Load(void)
{
	//// デバイスの取得
	//LPDIRECT3DDEVICE9 pDevice = *CManager::GetRenderer()->GetDevice();

	//for (int nCntItem = 0; nCntItem < ITEMTYPE_MAX; nCntItem++)
	//{
	//	// テクスチャ読み込み
	//	D3DXCreateTextureFromFile(pDevice, sTextureFileName[nCntItem], &m_apTexture[nCntItem]);
	//}

	return S_OK;
}

// =====================================================================================================================================================================
//  
// アンロード
//
// =====================================================================================================================================================================
void CBullet::Unload(void)
{
	//for (int nCntTex = 0; nCntTex < ITEMTYPE::ITEMTYPE_MAX; nCntTex++)
	//{
	//	// テクスチャの開放
	//	if (m_apTexture[nCntTex] != NULL)
	//	{
	//		m_apTexture[nCntTex]->Release();
	//		m_apTexture[nCntTex] = NULL;
	//	}
	//}
}