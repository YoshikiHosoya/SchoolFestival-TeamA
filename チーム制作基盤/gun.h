// =====================================================================================================================================================================
//
// ガンの処理 [gun.h]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#ifndef _GUN_H_
#define _GUN_H_

// =====================================================================================================================================================================
// インクルードファイル
// =====================================================================================================================================================================
#include "main.h"
#include "model.h"

// =====================================================================================================================================================================
// ガンクラス
// =====================================================================================================================================================================
class CGun : public CModel
{
public:

	// 銃の種類
	enum GUN_TYPE
	{
		GUNTYPE_HANDGUN = 0,						// ハンドガン
		GUNTYPE_HEAVYMACHINEGUN,					// ヘビーマシンガン
		GUNTYPE_MAX									// 銃の種類の最大数
	};

	CGun();											// コンストラクタ
	~CGun();										// デストラクタ

	/* メンバ関数 */
	virtual HRESULT			Init();					// 初期化
	virtual void			Uninit();				// 終了
	virtual void			Update();				// 更新
	virtual void			Draw();					// 描画

	/* 静的メンバ関数 */
	static	CGun			*Create(D3DXVECTOR3 pos, D3DXVECTOR3 rot, D3DXMATRIX *mtx);		// 銃の生成

	/* メンバ関数 */
	GUN_TYPE				&GetGunType() { return m_type; };				// 銃の種類の取得
	void					SetGunType(GUN_TYPE type);						// 銃の種類の設定
	void					Shot();											// 銃の発射

private:
	/* メンバ変数 */
	GUN_TYPE				m_type;					// ガンの種類
	int						m_nAmmo;				// 弾薬数
	int						m_nInterval;			// インターバル
	D3DXMATRIX				*m_mtx;					// マトリックス
};
#endif
