// =====================================================================================================================================================================
//
// リザルトの処理 [result.h]
// Author : fujiwara masato
//
// =====================================================================================================================================================================
#include "result.h"
#include "manager.h"
#include "renderer.h"
#include "inputKeyboard.h"
#include "fade.h"
#include "UIManager.h"

//==========================================================
// マクロ定義
//==========================================================
#define _CRT_SECURE_NO_WARNINGS // 警告除去

// =====================================================================================================================================================================
// 静的メンバ変数の初期化
// =====================================================================================================================================================================

//==========================================================
// コンストラクタ
//==========================================================
CResult::CResult()
{
}

//==========================================================
// デストラクタ
//==========================================================
CResult::~CResult()
{
}

//==========================================================
// 初期化
//==========================================================
HRESULT CResult::Init(void)
{
	// UI生成
	CUIManager::Create();

	return S_OK;
}

//==========================================================
// 終了
//==========================================================
void CResult::Uninit(void)
{
}

//==========================================================
// 更新
//==========================================================
void CResult::Update(void)
{
	//キーボード情報取得
	CKeyboard *key = CManager::GetInputKeyboard();

	// エンターを押したとき
	if (key->GetKeyboardTrigger(DIK_RETURN))
	{
		// ゲームモードへ状態遷移
		CManager::GetRenderer()->GetFade()->SetFade(CManager::MODE_RANKING);
	}
}

//==========================================================
// 描画処理
//==========================================================
void CResult::Draw(void)
{
}

//==========================================================
// デバッグ情報表記
//==========================================================
void CResult::ShowDebugInfo(void)
{
}
