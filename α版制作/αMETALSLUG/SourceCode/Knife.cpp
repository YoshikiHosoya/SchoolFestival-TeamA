// =====================================================================================================================================================================
//
// ナイフの処理 [Knife.h]
// Author : Yoshiki Hosoya
//
// =====================================================================================================================================================================
#include "Knife.h"
#include "manager.h"
#include "renderer.h"
#include "orbit.h"
#include "collision.h"
// =====================================================================================================================================================================
// 静的メンバ変数の初期化
// =====================================================================================================================================================================

// =====================================================================================================================================================================
// マクロ定義
// =====================================================================================================================================================================

// =====================================================================================================================================================================
// コンストラクタ
// =====================================================================================================================================================================
CKnife::CKnife(OBJ_TYPE type) :CModel(type)
{
}

// =====================================================================================================================================================================
// デストラクタ
// =====================================================================================================================================================================
CKnife::~CKnife()
{
}

// =====================================================================================================================================================================
// 初期化処理
// =====================================================================================================================================================================
HRESULT CKnife::Init()
{
	// 初期化
	CModel::Init();

	m_bAttack = false;
	m_pOrbit = nullptr;

	return S_OK;
}

// =====================================================================================================================================================================
// 終了処理
// =====================================================================================================================================================================
void CKnife::Uninit(void)
{
	// 終了
	CModel::Uninit();
}

// =====================================================================================================================================================================
// 更新処理
// =====================================================================================================================================================================
void CKnife::Update(void)
{
	// 更新
	CModel::Update();

	if (m_bAttack)
	{
		//当たり判定処理
	}
}

// =====================================================================================================================================================================
// 描画処理
// =====================================================================================================================================================================
void CKnife::Draw(void)
{
	//攻撃しているかどうか
	if (m_bAttack)
	{
		// 描画
		CModel::Draw(*m_HandMatrix);
	}
}
// =====================================================================================================================================================================
// デバッグ
// =====================================================================================================================================================================
void CKnife::DebugInfo()
{
	char aDebugString[64];

	//軌跡が出てるかどうか
	m_pOrbit ?
		sprintf(aDebugString, "Orbit_ON\n") :	//true
		sprintf(aDebugString, "Orbit_OFF\n");	//false

	//デバッグ表記
	CDebugProc::Print("%s", aDebugString);
}

// =====================================================================================================================================================================
// 生成
// =====================================================================================================================================================================
CKnife * CKnife::Create(D3DXMATRIX *mtx)
{
	// 変数
	CKnife *pKnife;

	// メモリの確保
	pKnife = new CKnife(OBJTYPE_MODEL);

	// 初期化
	pKnife->Init();

	// マトリックス代入
	pKnife->m_HandMatrix = mtx;

	// 位置の設定
	pKnife->SetPosition(D3DXVECTOR3(ZeroVector3));

	// モデルタイプの設定
	pKnife->SetType(GUN_MODEL);

	// モデルカウントの設定
	pKnife->SetModelConut(MODEL_KNIFE);

	return pKnife;
}

// =====================================================================================================================================================================
// 攻撃開始
// =====================================================================================================================================================================
void CKnife::StartMeleeAttack()
{
	//軌跡作成
	m_pOrbit = COrbit::Create(GetMatrix());

	////コリジョン生成
	//m_pCollision = CCollision::Create();
	//m_pCollision->SetPos(GetPosptr());


	//攻撃終了
	m_bAttack = true;

}

// =====================================================================================================================================================================
// 攻撃終了
// =====================================================================================================================================================================
void CKnife::EndMeleeAttack()
{
	//nullcheck
	if (m_pOrbit)
	{
		//軌跡削除
		m_pOrbit->DeleteOrbit();
	}

	//攻撃状態終了
	m_bAttack = true;
}

// =====================================================================================================================================================================
// ナイフの攻撃判定処理
// =====================================================================================================================================================================
void CKnife::CollisionKnife()
{
}
