// =====================================================================================================================================================================
//
// 捕虜の処理 [prisoner.h]
// Author : fujiwara masato
//
// =====================================================================================================================================================================
#ifndef _PRISONER_H_
#define _PRISONER_H_

// =====================================================================================================================================================================
// インクルードファイル
// =====================================================================================================================================================================
#include "main.h"
#include "Scene.h"
#include "Character.h"
// =====================================================================================================================================================================
// 前方宣言
// =====================================================================================================================================================================
class CModel;
class CCollision;
class CItem;
// =====================================================================================================================================================================
// 捕虜クラス
// =====================================================================================================================================================================
class CPrisoner :public CCharacter
{
public:
	// 捕虜の状態
	typedef enum
	{
		PRISONER_STATE_STAY = 0,							// 縛られている初期状態
		PRISONER_STATE_DROPITEM,							// アイテムを落とす
		PRISONER_STATE_RUN,									// 走って消える
		PRISONER_STATE_SKIP,								// スキップする
		PRISONER_STATE_MAX									// 最大数
	}PRISONER_STATE;

	CPrisoner(OBJ_TYPE type);								// コンストラクタ
	~CPrisoner();											// デストラクタ

	/* メンバ関数 */
	HRESULT Init(void);										// 初期化
	void	Uninit(void);									// 終了
	void	Update(void);									// 更新
	void	Draw(void);										// 描画

	/* 静的メンバ関数 */
	static CPrisoner	*Create();							// 生成

	/* メンバ関数 */
	void				DebugInfo(void);					// デバッグ
	bool				DefaultMotion(void);				// デフォルトモーション
	void				DeleteCollision(void);				// 当たり判定の削除

	PRISONER_STATE		GetPrisonerState()
	{
		return m_PrisonerState;
	};														// 捕虜の状態の取得

	void					SetPrisonerState(PRISONER_STATE state)
	{
		m_PrisonerState = state;
	};														// 捕虜の状態の設定

	CCollision			*GetCollision()
	{
		return m_pCollision;
	};														// 当たり判定

private:
	/* メンバ関数 */
	void				PrisonerState();					// 捕虜の状態別処理
	/* メンバ変数 */
	PRISONER_STATE		m_PrisonerState;					// デバッグのステータス
	void				Move(float move, float fdest);		// 捕虜の移動
	CCollision			*m_pCollision;						// 当たり判定情報
	int					m_nDieCount;						// 捕虜が消滅するまでのカウント
};
#endif