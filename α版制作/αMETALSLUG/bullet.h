// =====================================================================================================================================================================
//
// バレットの処理 [bullet.h]
// Author : Sato Yoshiki
//
// =====================================================================================================================================================================
#ifndef _BULLET_H_
#define _BULLET_H_

// =====================================================================================================================================================================
// インクルードファイル
// =====================================================================================================================================================================
#include "main.h"
#include "scene3D.h"

// =====================================================================================================================================================================
// 前方宣言
// =====================================================================================================================================================================
class CCollision;

// =====================================================================================================================================================================
// 弾のパラメーター
// =====================================================================================================================================================================
typedef struct
{
	float				fBulletSpeed;	// 弾速
	int					nLife;			// 体力
	D3DXVECTOR3			size;			// サイズ
	float				fPower;			// 威力
	int					nAmmo;			// 弾薬数
	int					nTrigger;		// 1トリガーで発射される弾数
}BULLET_PARAM;

// =====================================================================================================================================================================
// バレットクラス
// =====================================================================================================================================================================
class CBullet : public CScene3D
{
public:
	// 弾の種類
	enum BULLET_TYPE
	{
		TYPE_PLAYER = 0,
		TYPE_ENEMY,
		TYPE_MAX,
	};

	// 銃の種類
	enum GUN_TYPE
	{
		GUNTYPE_HANDGUN = 0,						// ハンドガン
		GUNTYPE_HEAVYMACHINEGUN,					// ヘビーマシンガン
		GUNTYPE_SHOTGUN,							// ショットガン
		GUNTYPE_LASERGUN,							// レーザーガン
		GUNTYPE_ROCKETLAUNCHER,						// ロケットランチャー
		GUNTYPE_FLAMESHOT,							// フレイムショット
		GUNTYPE_MAX									// 銃の種類の最大数
	};

	CBullet(OBJ_TYPE type);								// コンストラクタ
	~CBullet();											// デストラクタ

	/* メンバ関数 */
	virtual HRESULT				Init();					// 初期化
	virtual void				Uninit();				// 終了
	virtual void				Update();				// 更新
	virtual void				Draw();					// 描画

	/* 静的メンバ関数 */
	static	void				BulletLoad();												// 弾のロード

	/* メンバ関数 */
	D3DXVECTOR3					&GetMove()						{ return m_move; };					// 移動値の取得
	void						SetMove(D3DXVECTOR3 move)		{ m_move = move; };					// 移動値の設定
	BULLET_TYPE					&GetBulletType()				{ return m_type; };					// 弾の種類の取得
	void						SetBulletType(BULLET_TYPE type) { m_type = type; };					// 弾の種類の設定
	BULLET_PARAM				*GetBulletParam(int nCnt)		{ return &m_BulletParam[nCnt]; };	// 弾のパラメーターの構造体の取得

private:
	/* メンバ変数 */
	D3DXVECTOR3					m_move;					// 移動値
	BULLET_TYPE					m_type;					// 弾の種類
	CCollision					*m_pCollision;			// 当たり判定情報
	/* 静的メンバ変数 */
	static char					*m_BulletFileName[GUNTYPE_MAX];	// 弾のファイル名
	static	BULLET_PARAM		m_BulletParam[GUNTYPE_MAX];		// 弾のパラメーター
};
#endif
